{% extends 'template/admin/_post.twig' %}
{% block page_name %}Site Menu{% endblock %}
{% block body %}
  <style>
    ul#nestedList {
      list-style-type: none;
      padding-left: 20px;
    }

    ul#nestedList li {
      margin: 5px 0;
      padding: 10px;
      background-color: #f0f0f0;
      border: 1px solid #ccc;
      cursor: grab;
    }

    ul#nestedList li.dragging {
      opacity: 0.5;
    }
  </style>
  <section class="content">
    <div class="card-body">
      {% if get_flash_message("notification_warning") %}
          <div class="alert alert-warning" role="alert">
              {{get_flash_message("notification_warning")}}
          </div>
      {% endif %}
      {% if get_flash_message("notification_success") %}
          <div class="alert alert-success" role="alert">
              {{get_flash_message("notification_success")}}
          </div>
      {% endif %}
      <form id="nestedForm" method="POST" action="{{ '/admin/menu/create' | base_url }}">
        <ul id="nestedList">
          {% for index, menu in menus %}
            <li draggable="true">
              <input type="text" name="items[{{index}}][menu]" class="form-control mb-1" placeholder="Menu Label" value="{{ menu.menu }}">
              {% if menu.page_id %}
                <select name="items[{{index}}][value]" class="form-control mb-1" style="display: inline;">
                {% for page in pages %}
                  <option value="{{ page.id }}" {{ page.id == menu.page_id ? "selected" : ""}}>{{ page.title }}</option>
                {% endfor %}
                </select>
              {% endif %}
              
              <button type="button" class="btn btn-primary" onclick="addItem(this, {{index}})">Add Sub Menu</button>
              <button type="button" class="btn btn-danger" onclick="removeItem(this)">Remove Menu</button>
              

              <ul id="sub_menu_{{index}}">
                {% for idx, submenu in menu.submenu %}
                  <li draggable="true">
                    <input type="text" name="items[{{index}}][sub_items][{{idx}}][menu]" class="form-control mb-1" placeholder="Sub Menu Label" value="{{ submenu.menu }}">
                    <select name="items[{{index}}][sub_items][{{idx}}][value]" class="form-control mb-1">
                      {% for page in pages %}
                        <option value="{{ page.id }}" {{ page.id == submenu.page_id ? "selected" : ""}}>{{ page.title }}</option>
                      {% endfor %}
                    </select>
                    <button type="button" onclick="removeSubItem(this)" class="btn btn-danger">Remove Sub Menu</button>
                  </li>
                {% endfor %}
              </ul>
              
            </li>
          {% endfor %}
        </ul>
        <button type="button" class="btn btn-warning" onclick="addMainItem()">Add Menu Item</button>
        <button type="submit" class="btn btn-success">Save Changes</button>
      </form>
    </div>
  </section>

  <script>
   let draggedItem = null;
    let overItem = null;

    function addDragAndDropEvents(item) {
      item.setAttribute('draggable', 'true');

      item.addEventListener('dragstart', function (e) {
        draggedItem = this;
        e.dataTransfer.effectAllowed = 'move';
        setTimeout(() => this.classList.add('dragging'), 0);
      });

      item.addEventListener('dragend', function () {
        this.classList.remove('dragging');
        draggedItem = null;
      });

      item.addEventListener('dragover', function (e) {
        e.preventDefault();
        overItem = this;
        e.dataTransfer.dropEffect = 'move';
      });

      item.addEventListener('drop', function (e) {
        e.preventDefault();
        if (draggedItem !== overItem && overItem.tagName === 'LI') {
          const parentList = overItem.parentElement;
          parentList.insertBefore(draggedItem, overItem.nextSibling);
        }
      });
    }

    document.querySelectorAll('#nestedList li').forEach(item => addDragAndDropEvents(item));

    function updateSelectVisibility(parent_index) {
      const selectElement = document.querySelector(`select[name="items[${parent_index}][value]"]`);
      if (selectElement) {
        const hasSubitems = selectElement.closest('ul') !== null;
        selectElement.style.display = hasSubitems ? 'none' : 'inline';
      }
    }

    function addItem(button, parent_index) {
      const parentLi = button.closest('li');
      let subList = parentLi.querySelector('ul'); 
      
      if (!subList) {
        subList = document.createElement('ul');
        parentLi.appendChild(subList);
      }


      subList.setAttribute("id", `sub_menu_${parent_index}`);
      
      const index = document.querySelectorAll(`#sub_menu_${parent_index} > li`).length;

      const newItem = document.createElement('li');
      let page_selection = '';
      {% for page in pages %}
        page_selection += `<option value="{{ page.id }}">{{ page.title }}</option>`;
      {% endfor %}

      newItem.innerHTML = `
        <input type="text" name="items[${parent_index}][sub_items][${index}][menu]" class="form-control mb-1" placeholder="Sub Menu Label">
        <select name="items[${parent_index}][sub_items][${index}][value]" class="form-control mb-1">
          ${page_selection}
        </select>
        <button type="button" onclick="removeSubItem(this)" class="btn btn-danger">Remove Sub Menu</button>
      `;
      
      addDragAndDropEvents(newItem);
      
      subList.insertBefore(newItem, subList.querySelector('.add-btn'));
      // Update the visibility of the select dropdown
      updateSelectVisibility(parent_index);
      
    }

    function addMainItem() {
      const mainList = document.querySelector('#nestedList');

      const index = document.querySelectorAll('#nestedList > li').length;

      const newItem = document.createElement('li');
      let page_selection = '';
      {% for page in pages %}
        page_selection += `<option value="{{ page.id }}">{{ page.title }}</option>`;
      {% endfor %}

      newItem.innerHTML = `
        <input type="text" name="items[${index}][menu]" class="form-control mb-1" placeholder="Menu Label">
        <select name="items[${index}][value]" class="form-control mb-1">
          ${page_selection}
        </select>
        <button type="button" class="btn btn-primary" onclick="addItem(this, ${index})">Add Sub Menu</button>
        <button type="button" class="btn btn-danger" onclick="removeItem(this)">Remove Menu</button>
      `;
      
      addDragAndDropEvents(newItem);

      mainList.appendChild(newItem);
      
      // Update the visibility of the select dropdown
      updateSelectVisibility(newItem);
    }

    function removeItem(button) {
      const parentLi = button.closest('li');
      parentLi.parentElement.removeChild(parentLi);
      
      // Optionally update visibility of any remaining items
      document.querySelectorAll('#nestedList li').forEach(item => updateSelectVisibility(item));
    }

    function removeSubItem(button) {
      const parentLi = button.closest('li');
      const parentUl = parentLi.parentElement;

      parentUl.removeChild(parentLi);

      if (parentUl.children.length === 0) {
        parentUl.remove();
      }
      
      // Update visibility of the parent item
      if (parentUl.parentElement) {
        updateSelectVisibility(parentUl.parentElement);
      }
    }

  </script>
{% endblock %}